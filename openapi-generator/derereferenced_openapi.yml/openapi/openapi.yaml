openapi: 3.0.3
info:
  title: Prism Agent
  version: 1.0.0
servers:
- url: /
paths:
  /schema-registry/schemas:
    get:
      description: "Lookup schemas by `author`, `name`, `tags` parameters and control\
        \ the pagination by `offset` and `limit` parameters "
      operationId: lookupSchemasByQuery
      parameters:
      - example: did:prism:4a5b5cf0a513e83b598bbea25cd6196746747f361a73ef77068268bc9bd732ff
        explode: true
        in: query
        name: author
        required: false
        schema:
          type: string
        style: form
      - example: DrivingLicense
        explode: true
        in: query
        name: name
        required: false
        schema:
          type: string
        style: form
      - example: 1.0.0
        explode: true
        in: query
        name: version
        required: false
        schema:
          type: string
        style: form
      - example: driving
        explode: true
        in: query
        name: tags
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: order
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CredentialSchemaResponsePage'
          description: Collection of CredentialSchema records.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid request parameters
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal server error
      summary: Lookup schemas by indexed fields
      tags:
      - Schema Registry
    post:
      description: Create the new credential schema record with metadata and internal
        JSON Schema on behalf of Cloud Agent. The credential schema will be signed
        by the keys of Cloud Agent and issued by the DID that corresponds to it.
      operationId: createSchema
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CredentialSchemaInput'
        description: JSON object required for the credential schema creation
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CredentialSchemaResponse'
          description: The new credential schema record is successfully created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid request parameters
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Resource could not be found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal server error
      summary: Publish new schema to the schema registry
      tags:
      - Schema Registry
  /schema-registry/{author}/{id}:
    put:
      description: Publish the new version of the credential schema record with metadata
        and internal JSON Schema on behalf of Cloud Agent. The credential schema will
        be signed by the keys of Cloud Agent and issued by the DID that corresponds
        to it.
      operationId: updateSchema
      parameters:
      - description: DID of the identity which authored the credential schema. A piece
          of Metadata.
        explode: false
        in: path
        name: author
        required: true
        schema:
          type: string
        style: simple
      - description: A locally unique identifier to address the schema. UUID is generated
          by the backend.
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CredentialSchemaInput'
        description: JSON object required for the credential schema update
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CredentialSchemaResponse'
          description: The credential schema record is successfully updated
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid request parameters
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Resource could not be found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal server error
      summary: Publish the new version of the credential schema to the schema registry
      tags:
      - Schema Registry
  /schema-registry/schemas/{guid}:
    get:
      description: Fetch the credential schema by the unique identifier
      operationId: getSchemaById
      parameters:
      - description: Globally unique identifier of the credential schema record
        explode: false
        in: path
        name: guid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CredentialSchemaResponse'
          description: CredentialSchema found by `guid`
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid request parameters
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Resource could not be found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal server error
      summary: Fetch the schema from the registry by `guid`
      tags:
      - Schema Registry
  /schema-registry/test:
    get:
      description: Trace the request input from the point of view of the server
      operationId: test
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: ""
        "400":
          content:
            text/plain:
              schema:
                type: string
          description: Invalid value
      summary: Trace the request input from the point of view of the server
      tags:
      - Schema Registry
  /verification/policies:
    get:
      description: "Lookup verification policies by `name`, and control the pagination\
        \ by `offset` and `limit` parameters"
      operationId: lookupVerificationPoliciesByQuery
      parameters:
      - explode: true
        in: query
        name: name
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: order
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VerificationPolicyPage'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid request parameters
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal server error
      summary: Lookup verification policies by query
      tags:
      - Verification
    post:
      description: Create the new verification policy
      operationId: createVerificationPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VerificationPolicyInput'
        description: Create verification policy object
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VerificationPolicy'
          description: Created verification policy entity
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid request parameters
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal server error
      summary: Create the new verification policy
      tags:
      - Verification
  /verification/policies/{id}:
    delete:
      description: Delete the verification policy by id
      operationId: deleteVerificationPolicyById
      parameters:
      - description: Delete the verification policy by id
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          description: Verification policy deleted successfully
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid request parameters
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Resource could not be found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal server error
      summary: Deleted the verification policy by id
      tags:
      - Verification
    get:
      description: Get the verification policy by id
      operationId: getVerificationPolicyById
      parameters:
      - description: Get the verification policy by id
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VerificationPolicy'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid request parameters
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Resource could not be found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal server error
      summary: Fetch the verification policy by id
      tags:
      - Verification
    put:
      description: Update the verification policy entry
      operationId: updateVerificationPolicy
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: Nonce of the previous VerificationPolicy
        explode: true
        in: query
        name: nonce
        required: true
        schema:
          format: int32
          type: integer
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VerificationPolicyInput'
        description: Update verification policy object
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VerificationPolicy'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid request parameters
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Resource could not be found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal server error
      summary: Update the verification policy object by id
      tags:
      - Verification
  /connections:
    get:
      description: Get the list of connection records paginated
      operationId: getConnections
      parameters:
      - explode: true
        in: query
        name: offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectionsPage'
          description: The list of connection records.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid request parameters
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal server error
      summary: Gets the list of connection records.
      tags:
      - Connections Management
    post:
      description: |2

        Generates a new Peer DID and creates an [Out of Band 2.0](https://identity.foundation/didcomm-messaging/spec/v2.0/#out-of-band-messages) invitation.
        It returns a new connection record in `InvitationGenerated` state.
        The request body may contain a `label` that can be used as a human readable alias for the connection, for example `{'label': "Bob"}`
      operationId: createConnection
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateConnectionRequest'
        description: JSON object required for the connection creation
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Connection'
          description: "The connection record was created successfully, and is returned\
            \ in the response body."
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid request parameters
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal server error
      summary: Creates a new connection record and returns an Out of Band invitation.
      tags:
      - Connections Management
  /connections/{connectionId}:
    get:
      description: Gets an existing connection record by its unique identifier
      operationId: getConnection
      parameters:
      - description: The unique identifier of the connection record.
        explode: false
        in: path
        name: connectionId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Connection'
          description: The connection record.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid request parameters
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Resource could not be found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal server error
      summary: Gets an existing connection record by its unique identifier.
      tags:
      - Connections Management
  /connection-invitations:
    post:
      description: |2

        Accepts an [Out of Band 2.0](https://identity.foundation/didcomm-messaging/spec/v2.0/#out-of-band-messages) invitation, generates a new Peer DID,
        and submits a Connection Request to the inviter.
        It returns a connection object in `ConnectionRequestPending` state, until the Connection Request is eventually sent to the inviter by the prism-agent's background process. The connection object state will then automatically move to `ConnectionRequestSent`.
      operationId: acceptConnectionInvitation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AcceptConnectionInvitationRequest'
        description: "The request used by an invitee to accept a connection invitation\
          \ received from an inviter, using out-of-band mechanism."
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Connection'
          description: The invitation was successfully accepted.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid request parameters
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal server error
      summary: Accepts an Out of Band invitation.
      tags:
      - Connections Management
  /dids/{didRef}:
    get:
      description: |
        Resolve Prism DID to a W3C DID document representation.
        The response can be the [DID resolution result](https://w3c-ccg.github.io/did-resolution/#did-resolution-result)
        or [DID document representation](https://www.w3.org/TR/did-core/#representations) depending on the `Accept` request header.
        The response is implemented according to [resolver HTTP binding](https://w3c-ccg.github.io/did-resolution/#bindings-https) in the DID resolution spec.
      operationId: getDID
      parameters:
      - description: "Prism DID according to [the Prism DID method syntax](https://github.com/input-output-hk/prism-did-method-spec/blob/main/w3c-spec/PRISM-method.md#prism-did-method-syntax)"
        example: did:prism:4a5b5cf0a513e83b598bbea25cd6196746747f361a73ef77068268bc9bd732ff
        explode: false
        in: path
        name: didRef
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/ld+json; profile=https://w3id.org/did-resolution:
              schema:
                $ref: '#/components/schemas/DIDResolutionResult'
            application/did+ld+json:
              schema:
                $ref: '#/components/schemas/DIDDocument'
          description: The resolution result or W3C DID document representation
        "400":
          content:
            application/ld+json; profile=https://w3id.org/did-resolution:
              schema:
                $ref: '#/components/schemas/DIDResolutionResult'
            application/did+ld+json:
              schema:
                $ref: '#/components/schemas/DIDDocument'
          description: Invalid DID or DID URL
        "404":
          content:
            application/ld+json; profile=https://w3id.org/did-resolution:
              schema:
                $ref: '#/components/schemas/DIDResolutionResult'
            application/did+ld+json:
              schema:
                $ref: '#/components/schemas/DIDDocument'
          description: The DID is not found
        "406":
          content:
            application/ld+json; profile=https://w3id.org/did-resolution:
              schema:
                $ref: '#/components/schemas/DIDResolutionResult'
            application/did+ld+json:
              schema:
                $ref: '#/components/schemas/DIDDocument'
          description: The DID document representation is not supported
        "410":
          content:
            application/ld+json; profile=https://w3id.org/did-resolution:
              schema:
                $ref: '#/components/schemas/DIDResolutionResult'
            application/did+ld+json:
              schema:
                $ref: '#/components/schemas/DIDDocument'
          description: The DID is deactivated
        "500":
          content:
            application/ld+json; profile=https://w3id.org/did-resolution:
              schema:
                $ref: '#/components/schemas/DIDResolutionResult'
            application/did+ld+json:
              schema:
                $ref: '#/components/schemas/DIDDocument'
          description: Internal error
        "501":
          content:
            application/ld+json; profile=https://w3id.org/did-resolution:
              schema:
                $ref: '#/components/schemas/DIDResolutionResult'
            application/did+ld+json:
              schema:
                $ref: '#/components/schemas/DIDDocument'
          description: The DID method is not supported
      summary: Resolve Prism DID to a W3C representation
      tags:
      - DID
  /did-registrar/dids:
    get:
      description: |-
        List all DIDs stored in Prism Agent's wallet.
        Return a paginated items ordered by created timestamp.
        If the `limit` parameter is not set, it defaults to 100 items per page.
      operationId: getDid-registrarDids
      parameters:
      - explode: true
        in: query
        name: offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ManagedDIDPage'
          description: List Prism Agent managed DIDs
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid request parameters
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal server error
      summary: List all DIDs stored in Prism Agent's wallet
      tags:
      - DID Registrar
    post:
      description: |-
        Create unpublished DID and store it inside Prism Agent's wallet. The private keys of the DID is
        managed by Prism Agent. The DID can later be published to the VDR using publications endpoint.
      operationId: postDid-registrarDids
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateManagedDidRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateManagedDIDResponse'
          description: Created unpublished DID.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid request parameters
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unable to process the request
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal server error
      summary: Create unpublished DID and store it in Prism Agent's wallet
      tags:
      - DID Registrar
  /did-registrar/dids/{didRef}:
    get:
      description: Get DID stored in Prism Agent's wallet
      operationId: getDid-registrarDidsDidref
      parameters:
      - description: "Prism DID according to [the Prism DID method syntax](https://github.com/input-output-hk/prism-did-method-spec/blob/main/w3c-spec/PRISM-method.md#prism-did-method-syntax)"
        example: did:prism:4a5b5cf0a513e83b598bbea25cd6196746747f361a73ef77068268bc9bd732ff
        explode: false
        in: path
        name: didRef
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ManagedDID'
          description: Get Prism Agent managed DID
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid request parameters
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Resource could not be found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal server error
      summary: Get DID stored in Prism Agent's wallet
      tags:
      - DID Registrar
  /did-registrar/dids/{didRef}/publications:
    post:
      description: Publish the DID stored in Prism Agent's wallet to the VDR.
      operationId: postDid-registrarDidsDidrefPublications
      parameters:
      - description: "Prism DID according to [the Prism DID method syntax](https://github.com/input-output-hk/prism-did-method-spec/blob/main/w3c-spec/PRISM-method.md#prism-did-method-syntax)"
        example: did:prism:4a5b5cf0a513e83b598bbea25cd6196746747f361a73ef77068268bc9bd732ff
        explode: false
        in: path
        name: didRef
        required: true
        schema:
          type: string
        style: simple
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DIDOperationResponse'
          description: Publishing DID to the VDR.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid request parameters
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Resource could not be found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal server error
      summary: Publish the DID stored in Prism Agent's wallet to the VDR
      tags:
      - DID Registrar
  /did-registrar/dids/{didRef}/updates:
    post:
      description: |-
        Update DID in Prism Agent's wallet and post update operation to the VDR.
        This endpoint updates the DID document from the last confirmed operation.
        Submitting multiple update operations without waiting for confirmation will result in
        some operations being rejected as only one operation is allowed to be appended to the last confirmed operation.
      operationId: postDid-registrarDidsDidrefUpdates
      parameters:
      - description: "Prism DID according to [the Prism DID method syntax](https://github.com/input-output-hk/prism-did-method-spec/blob/main/w3c-spec/PRISM-method.md#prism-did-method-syntax)"
        example: did:prism:4a5b5cf0a513e83b598bbea25cd6196746747f361a73ef77068268bc9bd732ff
        explode: false
        in: path
        name: didRef
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateManagedDIDRequest'
        required: true
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DIDOperationResponse'
          description: DID update operation accepted
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid request parameters
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Resource could not be found
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Cannot process due to conflict with current state of the resource
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unable to process the request
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal server error
      summary: Update DID in Prism Agent's wallet and post update operation to the
        VDR
      tags:
      - DID Registrar
  /did-registrar/dids/{didRef}/deactivations:
    post:
      description: Deactivate DID in Prism Agent's wallet and post deactivate operation
        to the VDR.
      operationId: postDid-registrarDidsDidrefDeactivations
      parameters:
      - description: "Prism DID according to [the Prism DID method syntax](https://github.com/input-output-hk/prism-did-method-spec/blob/main/w3c-spec/PRISM-method.md#prism-did-method-syntax)"
        example: did:prism:4a5b5cf0a513e83b598bbea25cd6196746747f361a73ef77068268bc9bd732ff
        explode: false
        in: path
        name: didRef
        required: true
        schema:
          type: string
        style: simple
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DIDOperationResponse'
          description: DID deactivation operation accepted
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid request parameters
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Resource could not be found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unable to process the request
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal server error
      summary: Deactivate DID in Prism Agent's wallet and post deactivate operation
        to the VDR
      tags:
      - DID Registrar
  /issue-credentials/credential-offers:
    post:
      description: Creates a new credential offer in the database
      operationId: createCredentialOffer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateIssueCredentialRecordRequest'
        description: The credential offer object.
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IssueCredentialRecord'
          description: The issue credential record.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid request parameters
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal server error
      summary: "As a credential issuer, create a new credential offer to be sent to\
        \ a holder."
      tags:
      - Issue Credentials Protocol
  /issue-credentials/records:
    get:
      description: Get the list of issue credential records paginated
      operationId: getCredentialRecords
      parameters:
      - explode: true
        in: query
        name: offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The thid of a DIDComm communication.
        explode: true
        in: query
        name: thid
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IssueCredentialRecordPage'
          description: The list of issue credential records.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid request parameters
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal server error
      summary: Gets the list of issue credential records.
      tags:
      - Issue Credentials Protocol
  /issue-credentials/records/{recordId}:
    get:
      description: Gets issue credential records by record id
      operationId: getCredentialRecord
      parameters:
      - description: The unique identifier of the issue credential record.
        explode: false
        in: path
        name: recordId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IssueCredentialRecord'
          description: The issue credential record.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid request parameters
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Resource could not be found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal server error
      summary: Gets an existing issue credential record by its unique identifier.
      tags:
      - Issue Credentials Protocol
  /issue-credentials/records/{recordId}/accept-offer:
    post:
      description: Accepts a credential offer received from a VC issuer and sends
        back a credential request.
      operationId: acceptCredentialOffer
      parameters:
      - description: The unique identifier of the issue credential record.
        explode: false
        in: path
        name: recordId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AcceptCredentialOfferRequest'
        description: The accept credential offer request object.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IssueCredentialRecord'
          description: The issue credential offer was successfully accepted.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid request parameters
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Resource could not be found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal server error
      summary: "As a holder, accepts a credential offer received from an issuer."
      tags:
      - Issue Credentials Protocol
  /issue-credentials/records/{recordId}/issue-credential:
    post:
      description: Sends credential to a holder (holder DID is specified in credential
        as subjectDid). Credential is constructed from the credential records found
        by credential id.
      operationId: issueCredential
      parameters:
      - description: The unique identifier of the issue credential record.
        explode: false
        in: path
        name: recordId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IssueCredentialRecord'
          description: The request was processed successfully and the credential will
            be issued asynchronously.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid request parameters
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Resource could not be found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal server error
      summary: "As an issuer, issues the verifiable credential related to the specified\
        \ record."
      tags:
      - Issue Credentials Protocol
  /present-proof/presentations:
    get:
      description: list of presentation statuses
      operationId: getAllPresentation
      parameters:
      - explode: true
        in: query
        name: offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: thid
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PresentationStatusPage'
          description: The list of proof presentation records.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid request parameters
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal server error
      summary: Gets the list of proof presentation records.
      tags:
      - Present Proof
    post:
      description: Holder presents proof derived from the verifiable credential to
        verifier.
      operationId: requestPresentation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestPresentationInput'
        description: The present proof creation request.
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestPresentationOutput'
          description: The proof presentation request was created successfully and
            will be sent asynchronously to the Prover.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid request parameters
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal server error
      summary: "As a Verifier, create a new proof presentation request and send it\
        \ to the Prover."
      tags:
      - Present Proof
  /present-proof/presentations/{presentationId}:
    get:
      description: Returns an existing presentation record by id.
      operationId: getPresentation
      parameters:
      - description: The unique identifier of the presentation record.
        explode: false
        in: path
        name: presentationId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PresentationStatus'
          description: The proof presentation record.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid request parameters
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Resource could not be found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal server error
      summary: Gets an existing proof presentation record by its unique identifier.
        More information on the error can be found in the response body.
      tags:
      - Present Proof
    patch:
      description: Accept or reject presentation of proof request.
      operationId: updatePresentation
      parameters:
      - description: The unique identifier of the presentation record.
        explode: false
        in: path
        name: presentationId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestPresentationAction'
        description: The action to perform on the proof presentation record.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PresentationStatus'
          description: The proof presentation record was successfully updated.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid request parameters
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Resource could not be found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal server error
      summary: "Updates the proof presentation record matching the unique identifier,\
        \ with the specific action to perform."
      tags:
      - Present Proof
  /_system/health:
    get:
      description: Returns the health info object of the running service
      operationId: systemHealth
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthInfo'
          description: The health info object.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid request parameters
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal server error
      summary: "As a system user, check the health status of the running service"
      tags:
      - System
  /_system/metrics:
    get:
      description: Returns the health info object of the running service
      operationId: systemMetrics
      responses:
        "200":
          content:
            text/plain:
              schema:
                type: string
          description: The metrics as pain strings.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid request parameters
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal server error
      summary: "As a system user, check the health status of the running service"
      tags:
      - System
components:
  schemas:
    AcceptConnectionInvitationRequest:
      example:
        invitation: eyJAaWQiOiIzZmE4NWY2NC01NzE3LTQ1NjItYjNmYy0yYzk2M2Y2NmFmYTYiLCJAdHlwZSI6Imh0dHBzOi8vZGlkY29tbS5vcmcvbXktZmFtaWx5LzEuMC9teS1tZXNzYWdlLXR5cGUiLCJkaWQiOiJXZ1d4cXp0ck5vb0c5MlJYdnhTVFd2IiwiaW1hZ2VVcmwiOiJodHRwOi8vMTkyLjE2OC41Ni4xMDEvaW1nL2xvZ28uanBnIiwibGFiZWwiOiJCb2IiLCJyZWNpcGllbnRLZXlzIjpbIkgzQzJBVnZMTXY2Z21NTmFtM3VWQWpacGZrY0pDd0R3blpuNnozd1htcVBWIl0sInJvdXRpbmdLZXlzIjpbIkgzQzJBVnZMTXY2Z21NTmFtM3VWQWpacGZrY0pDd0R3blpuNnozd1htcVBWIl0sInNlcnZpY2VFbmRwb2ludCI6Imh0dHA6Ly8xOTIuMTY4LjU2LjEwMTo4MDIwIn0=
      properties:
        invitation:
          description: The base64-encoded raw invitation.
          example: eyJAaWQiOiIzZmE4NWY2NC01NzE3LTQ1NjItYjNmYy0yYzk2M2Y2NmFmYTYiLCJAdHlwZSI6Imh0dHBzOi8vZGlkY29tbS5vcmcvbXktZmFtaWx5LzEuMC9teS1tZXNzYWdlLXR5cGUiLCJkaWQiOiJXZ1d4cXp0ck5vb0c5MlJYdnhTVFd2IiwiaW1hZ2VVcmwiOiJodHRwOi8vMTkyLjE2OC41Ni4xMDEvaW1nL2xvZ28uanBnIiwibGFiZWwiOiJCb2IiLCJyZWNpcGllbnRLZXlzIjpbIkgzQzJBVnZMTXY2Z21NTmFtM3VWQWpacGZrY0pDd0R3blpuNnozd1htcVBWIl0sInJvdXRpbmdLZXlzIjpbIkgzQzJBVnZMTXY2Z21NTmFtM3VWQWpacGZrY0pDd0R3blpuNnozd1htcVBWIl0sInNlcnZpY2VFbmRwb2ludCI6Imh0dHA6Ly8xOTIuMTY4LjU2LjEwMTo4MDIwIn0=
          type: string
      required:
      - invitation
      type: object
    AcceptCredentialOfferRequest:
      example:
        subjectId: did:prism:3bb0505d13fcb04d28a48234edb27b0d4e6d7e18a81e2c1abab58f3bbc21ce6f
      properties:
        subjectId:
          description: The short-form subject Prism DID to which the verifiable credential
            should be issued.
          example: did:prism:3bb0505d13fcb04d28a48234edb27b0d4e6d7e18a81e2c1abab58f3bbc21ce6f
          type: string
      required:
      - subjectId
      type: object
    ActionType:
      enum:
      - ADD_KEY
      - ADD_SERVICE
      - REMOVE_KEY
      - REMOVE_SERVICE
      - UPDATE_SERVICE
      type: string
    Connection:
      example:
        createdAt: 2022-03-10T12:00:00Z
        theirDid: did:peer:67890
        role: Inviter
        invitation:
          invitationUrl: https://my.domain.com/path?_oob=eyJAaWQiOiIzZmE4NWY2NC01NzE3LTQ1NjItYjNmYy0yYzk2M2Y2NmFmYTYiLCJAdHlwZSI6Imh0dHBzOi8vZGlkY29tbS5vcmcvbXktZmFtaWx5LzEuMC9teS1tZXNzYWdlLXR5cGUiLCJkaWQiOiJXZ1d4cXp0ck5vb0c5MlJYdnhTVFd2IiwiaW1hZ2VVcmwiOiJodHRwOi8vMTkyLjE2OC41Ni4xMDEvaW1nL2xvZ28uanBnIiwibGFiZWwiOiJCb2IiLCJyZWNpcGllbnRLZXlzIjpbIkgzQzJBVnZMTXY2Z21NTmFtM3VWQWpacGZrY0pDd0R3blpuNnozd1htcVBWIl0sInJvdXRpbmdLZXlzIjpbIkgzQzJBVnZMTXY2Z21NTmFtM3VWQWpacGZrY0pDd0R3blpuNnozd1htcVBWIl0sInNlcnZpY2VFbmRwb2ludCI6Imh0dHA6Ly8xOTIuMTY4LjU2LjEwMTo4MDIwIn0=
          from: did:peer:1234457
          id: 0527aea1-d131-3948-a34d-03af39aba8b4
          type: https://didcomm.org/out-of-band/2.0/invitation
        kind: Connection
        connectionId: 0527aea1-d131-3948-a34d-03af39aba8b4
        self: https://atala-prism-products.io/connections/ABCD-1234
        label: Peter
        myDid: did:peer:12345
        state: InvitationGenerated
        updatedAt: 2022-03-10T12:00:00Z
      properties:
        connectionId:
          description: The unique identifier of the connection.
          example: 0527aea1-d131-3948-a34d-03af39aba8b4
          format: uuid
          type: string
        label:
          description: A human readable alias for the connection.
          example: Peter
          type: string
        myDid:
          description: The DID representing me as the inviter or invitee in this specific
            connection.
          example: did:peer:12345
          type: string
        theirDid:
          description: The DID representing the other peer as the an inviter or invitee
            in this specific connection.
          example: did:peer:67890
          type: string
        role:
          description: The role played by the Prism agent in the connection flow.
          enum:
          - Inviter
          - Invitee
          example: Inviter
          type: string
        state:
          description: The current state of the connection protocol execution.
          enum:
          - InvitationGenerated
          - InvitationReceived
          - ConnectionRequestPending
          - ConnectionRequestSent
          - ConnectionRequestReceived
          - ConnectionResponsePending
          - ConnectionResponseSent
          - ConnectionResponseReceived
          - ProblemReportPending
          - ProblemReportSent
          - ProblemReportReceived
          example: InvitationGenerated
          type: string
        invitation:
          $ref: '#/components/schemas/ConnectionInvitation'
        createdAt:
          description: The date and time the connection record was created.
          example: 2022-03-10T12:00:00Z
          format: date-time
          type: string
        updatedAt:
          description: The date and time the connection record was last updated.
          example: 2022-03-10T12:00:00Z
          format: date-time
          type: string
        self:
          description: The reference to the connection resource.
          example: https://atala-prism-products.io/connections/ABCD-1234
          type: string
        kind:
          description: The type of object returned. In this case a `Connection`.
          example: Connection
          type: string
      required:
      - connectionId
      - createdAt
      - invitation
      - kind
      - role
      - self
      - state
      type: object
    ConnectionInvitation:
      description: The invitation for this connection
      example:
        invitationUrl: https://my.domain.com/path?_oob=eyJAaWQiOiIzZmE4NWY2NC01NzE3LTQ1NjItYjNmYy0yYzk2M2Y2NmFmYTYiLCJAdHlwZSI6Imh0dHBzOi8vZGlkY29tbS5vcmcvbXktZmFtaWx5LzEuMC9teS1tZXNzYWdlLXR5cGUiLCJkaWQiOiJXZ1d4cXp0ck5vb0c5MlJYdnhTVFd2IiwiaW1hZ2VVcmwiOiJodHRwOi8vMTkyLjE2OC41Ni4xMDEvaW1nL2xvZ28uanBnIiwibGFiZWwiOiJCb2IiLCJyZWNpcGllbnRLZXlzIjpbIkgzQzJBVnZMTXY2Z21NTmFtM3VWQWpacGZrY0pDd0R3blpuNnozd1htcVBWIl0sInJvdXRpbmdLZXlzIjpbIkgzQzJBVnZMTXY2Z21NTmFtM3VWQWpacGZrY0pDd0R3blpuNnozd1htcVBWIl0sInNlcnZpY2VFbmRwb2ludCI6Imh0dHA6Ly8xOTIuMTY4LjU2LjEwMTo4MDIwIn0=
        from: did:peer:1234457
        id: 0527aea1-d131-3948-a34d-03af39aba8b4
        type: https://didcomm.org/out-of-band/2.0/invitation
      properties:
        id:
          description: The unique identifier of the invitation. It should be used
            as parent thread ID (pthid) for the Connection Request message that follows.
          example: 0527aea1-d131-3948-a34d-03af39aba8b4
          format: uuid
          type: string
        type:
          description: The DIDComm Message Type URI (MTURI) the invitation message
            complies with.
          example: https://didcomm.org/out-of-band/2.0/invitation
          type: string
        from:
          description: The DID representing the sender to be used by recipients for
            future interactions.
          example: did:peer:1234457
          type: string
        invitationUrl:
          description: "The invitation message encoded as a URL. This URL follows\
            \ the Out of [Band 2.0 protocol](https://identity.foundation/didcomm-messaging/spec/v2.0/#out-of-band-messages)\
            \ and can be used to generate a QR code for example."
          example: https://my.domain.com/path?_oob=eyJAaWQiOiIzZmE4NWY2NC01NzE3LTQ1NjItYjNmYy0yYzk2M2Y2NmFmYTYiLCJAdHlwZSI6Imh0dHBzOi8vZGlkY29tbS5vcmcvbXktZmFtaWx5LzEuMC9teS1tZXNzYWdlLXR5cGUiLCJkaWQiOiJXZ1d4cXp0ck5vb0c5MlJYdnhTVFd2IiwiaW1hZ2VVcmwiOiJodHRwOi8vMTkyLjE2OC41Ni4xMDEvaW1nL2xvZ28uanBnIiwibGFiZWwiOiJCb2IiLCJyZWNpcGllbnRLZXlzIjpbIkgzQzJBVnZMTXY2Z21NTmFtM3VWQWpacGZrY0pDd0R3blpuNnozd1htcVBWIl0sInJvdXRpbmdLZXlzIjpbIkgzQzJBVnZMTXY2Z21NTmFtM3VWQWpacGZrY0pDd0R3blpuNnozd1htcVBWIl0sInNlcnZpY2VFbmRwb2ludCI6Imh0dHA6Ly8xOTIuMTY4LjU2LjEwMTo4MDIwIn0=
          type: string
      required:
      - from
      - id
      - invitationUrl
      - type
      type: object
    ConnectionsPage:
      example:
        pageOf: ""
        next: /prism-agent/connections?offset=20&limit=10
        previous: /prism-agent/connections?offset=0&limit=10
        contents:
        - createdAt: 2022-03-10T12:00:00Z
          theirDid: did:peer:67890
          role: Inviter
          invitation:
            invitationUrl: https://my.domain.com/path?_oob=eyJAaWQiOiIzZmE4NWY2NC01NzE3LTQ1NjItYjNmYy0yYzk2M2Y2NmFmYTYiLCJAdHlwZSI6Imh0dHBzOi8vZGlkY29tbS5vcmcvbXktZmFtaWx5LzEuMC9teS1tZXNzYWdlLXR5cGUiLCJkaWQiOiJXZ1d4cXp0ck5vb0c5MlJYdnhTVFd2IiwiaW1hZ2VVcmwiOiJodHRwOi8vMTkyLjE2OC41Ni4xMDEvaW1nL2xvZ28uanBnIiwibGFiZWwiOiJCb2IiLCJyZWNpcGllbnRLZXlzIjpbIkgzQzJBVnZMTXY2Z21NTmFtM3VWQWpacGZrY0pDd0R3blpuNnozd1htcVBWIl0sInJvdXRpbmdLZXlzIjpbIkgzQzJBVnZMTXY2Z21NTmFtM3VWQWpacGZrY0pDd0R3blpuNnozd1htcVBWIl0sInNlcnZpY2VFbmRwb2ludCI6Imh0dHA6Ly8xOTIuMTY4LjU2LjEwMTo4MDIwIn0=
            from: did:peer:1234457
            id: 0527aea1-d131-3948-a34d-03af39aba8b4
            type: https://didcomm.org/out-of-band/2.0/invitation
          kind: Connection
          connectionId: 0527aea1-d131-3948-a34d-03af39aba8b4
          self: https://atala-prism-products.io/connections/ABCD-1234
          label: Peter
          myDid: did:peer:12345
          state: InvitationGenerated
          updatedAt: 2022-03-10T12:00:00Z
        - createdAt: 2022-03-10T12:00:00Z
          theirDid: did:peer:67890
          role: Inviter
          invitation:
            invitationUrl: https://my.domain.com/path?_oob=eyJAaWQiOiIzZmE4NWY2NC01NzE3LTQ1NjItYjNmYy0yYzk2M2Y2NmFmYTYiLCJAdHlwZSI6Imh0dHBzOi8vZGlkY29tbS5vcmcvbXktZmFtaWx5LzEuMC9teS1tZXNzYWdlLXR5cGUiLCJkaWQiOiJXZ1d4cXp0ck5vb0c5MlJYdnhTVFd2IiwiaW1hZ2VVcmwiOiJodHRwOi8vMTkyLjE2OC41Ni4xMDEvaW1nL2xvZ28uanBnIiwibGFiZWwiOiJCb2IiLCJyZWNpcGllbnRLZXlzIjpbIkgzQzJBVnZMTXY2Z21NTmFtM3VWQWpacGZrY0pDd0R3blpuNnozd1htcVBWIl0sInJvdXRpbmdLZXlzIjpbIkgzQzJBVnZMTXY2Z21NTmFtM3VWQWpacGZrY0pDd0R3blpuNnozd1htcVBWIl0sInNlcnZpY2VFbmRwb2ludCI6Imh0dHA6Ly8xOTIuMTY4LjU2LjEwMTo4MDIwIn0=
            from: did:peer:1234457
            id: 0527aea1-d131-3948-a34d-03af39aba8b4
            type: https://didcomm.org/out-of-band/2.0/invitation
          kind: Connection
          connectionId: 0527aea1-d131-3948-a34d-03af39aba8b4
          self: https://atala-prism-products.io/connections/ABCD-1234
          label: Peter
          myDid: did:peer:12345
          state: InvitationGenerated
          updatedAt: 2022-03-10T12:00:00Z
        kind: ConnectionsPage
        self: /prism-agent/connections?offset=10&limit=10
      properties:
        contents:
          description: ""
          items:
            $ref: '#/components/schemas/Connection'
          type: array
        kind:
          description: ""
          example: ConnectionsPage
          type: string
        self:
          description: ""
          example: /prism-agent/connections?offset=10&limit=10
          type: string
        pageOf:
          description: ""
          example: ""
          type: string
        next:
          description: ""
          example: /prism-agent/connections?offset=20&limit=10
          type: string
        previous:
          description: ""
          example: /prism-agent/connections?offset=0&limit=10
          type: string
      required:
      - kind
      - pageOf
      - self
      type: object
    CreateConnectionRequest:
      example:
        label: Peter
      properties:
        label:
          description: A human readable alias for the connection.
          example: Peter
          type: string
      type: object
    CreateIssueCredentialRecordRequest:
      example:
        validityPeriod: 3600.0
        issuingDID: did:prism:issuerofverifiablecredentials
        schemaId: https://agent-host.com/prism-agent/schema-registry/schemas/d9569cec-c81e-4779-aa86-0d5994d82676
        claims: "(firstname,Alice)"
        connectionId: connectionId
        automaticIssuance: true
      properties:
        validityPeriod:
          description: The validity period in seconds of the verifiable credential
            that will be issued.
          example: 3600.0
          format: double
          type: number
        schemaId:
          description: The unique identifier of the schema used for this credential
            offer.
          example: https://agent-host.com/prism-agent/schema-registry/schemas/d9569cec-c81e-4779-aa86-0d5994d82676
          type: string
        claims:
          description: The claims that will be associated with the issued verifiable
            credential.
          example: "(firstname,Alice)"
        automaticIssuance:
          description: "Specifies whether or not the credential should be automatically\
            \ generated and issued when receiving the `CredentialRequest` from the\
            \ holder. If set to `false`, a manual approval by the issuer via API call\
            \ will be required for the VC to be issued."
          example: true
          type: boolean
        issuingDID:
          description: The issuer DID of the verifiable credential object.
          example: did:prism:issuerofverifiablecredentials
          type: string
        connectionId:
          description: "The unique identifier of a DIDComm connection that already\
            \ exists between the issuer and the holder, and that will be used to execute\
            \ the issue credential protocol."
          type: string
      required:
      - claims
      - connectionId
      - issuingDID
      type: object
    CreateManagedDIDResponse:
      example:
        longFormDid: did:prism:4a5b5cf0a513e83b598bbea25cd6196746747f361a73ef77068268bc9bd732ff:Cr4BCrsBElsKBmF1dGgtMRAEQk8KCXNlY3AyNTZrMRIg0opTuxu-zt6aRbT1tPniG4eu4CYsQPM3rrLzvzNiNgwaIIFTnyT2N4U7qCQ78qtWC3-p0el6Hvv8qxG5uuEw-WgMElwKB21hc3RlcjAQAUJPCglzZWNwMjU2azESIKhBU0eCOO6Vinz_8vhtFSAhYYqrkEXC8PHGxkuIUev8GiAydFHLXb7c22A1Uj_PR21NZp6BCDQqNq2xd244txRgsQ
      properties:
        longFormDid:
          description: A long-form DID for the created DID
          example: did:prism:4a5b5cf0a513e83b598bbea25cd6196746747f361a73ef77068268bc9bd732ff:Cr4BCrsBElsKBmF1dGgtMRAEQk8KCXNlY3AyNTZrMRIg0opTuxu-zt6aRbT1tPniG4eu4CYsQPM3rrLzvzNiNgwaIIFTnyT2N4U7qCQ78qtWC3-p0el6Hvv8qxG5uuEw-WgMElwKB21hc3RlcjAQAUJPCglzZWNwMjU2azESIKhBU0eCOO6Vinz_8vhtFSAhYYqrkEXC8PHGxkuIUev8GiAydFHLXb7c22A1Uj_PR21NZp6BCDQqNq2xd244txRgsQ
          type: string
      required:
      - longFormDid
      type: object
    CreateManagedDidRequest:
      example:
        documentTemplate:
          publicKeys:
          - purpose: authentication
            id: key-1
          - purpose: authentication
            id: key-1
          services:
          - id: service-1
            serviceEndpoint:
            - serviceEndpoint
            - serviceEndpoint
            type: LinkedDomains
          - id: service-1
            serviceEndpoint:
            - serviceEndpoint
            - serviceEndpoint
            type: LinkedDomains
      properties:
        documentTemplate:
          $ref: '#/components/schemas/CreateManagedDidRequestDocumentTemplate'
      required:
      - documentTemplate
      type: object
    CreateManagedDidRequestDocumentTemplate:
      example:
        publicKeys:
        - purpose: authentication
          id: key-1
        - purpose: authentication
          id: key-1
        services:
        - id: service-1
          serviceEndpoint:
          - serviceEndpoint
          - serviceEndpoint
          type: LinkedDomains
        - id: service-1
          serviceEndpoint:
          - serviceEndpoint
          - serviceEndpoint
          type: LinkedDomains
      properties:
        publicKeys:
          items:
            $ref: '#/components/schemas/ManagedDIDKeyTemplate'
          type: array
        services:
          items:
            $ref: '#/components/schemas/Service'
          type: array
      type: object
    CredentialSchemaInput:
      example:
        schema:
          $id: https://example.com/driving-license-1.0
          $schema: https://json-schema.org/draft/2020-12/schema
          description: Driving License
          type: object
          properties:
            emailAddress:
              type: string
              format: email
            givenName:
              type: string
            familyName:
              type: string
            dateOfIssuance:
              type: string
              format: date-time
            drivingLicenseID:
              type: string
            drivingClass:
              type: integer
          required:
          - emailAddress
          - familyName
          - dateOfIssuance
          - drivingLicenseID
          - drivingClass
          additionalProperties: false
        author: did:prism:4a5b5cf0a513e83b598bbea25cd6196746747f361a73ef77068268bc9bd732ff
        name: DrivingLicense
        description: Simple credential schema for the driving licence verifiable credential.
        type: https://w3c-ccg.github.io/vc-json-schemas/schema/2.0/schema.json
        version: 1.0.0
        tags:
        - tags
        - tags
      properties:
        name:
          description: A human-readable name for the credential schema. A piece of
            Metadata.
          example: DrivingLicense
          minLength: 1
          type: string
        version:
          description: Denotes the revision of a given Credential Schema. It should
            follow semantic version convention to describe the impact of the schema
            evolution.
          example: 1.0.0
          pattern: "^(0|[1-9]\\d*)\\.(0|[1-9]\\d*)\\.(0|[1-9]\\d*)(?:-((?:0|[1-9]\\\
            d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\\.(?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\\\
            +([0-9a-zA-Z-]+(?:\\.[0-9a-zA-Z-]+)*))?$"
          type: string
        description:
          description: A human-readable description of the credential schema
          example: Simple credential schema for the driving licence verifiable credential.
          minLength: 1
          type: string
        type:
          description: This field resolves to a JSON schema with details about the
            schema metadata that applies to the schema. A piece of Metadata.
          example: https://w3c-ccg.github.io/vc-json-schemas/schema/2.0/schema.json
          type: string
        schema:
          description: Valid JSON Schema where the Credential Schema data fields are
            defined. A piece of Metadata
          example:
            $id: https://example.com/driving-license-1.0
            $schema: https://json-schema.org/draft/2020-12/schema
            description: Driving License
            type: object
            properties:
              emailAddress:
                type: string
                format: email
              givenName:
                type: string
              familyName:
                type: string
              dateOfIssuance:
                type: string
                format: date-time
              drivingLicenseID:
                type: string
              drivingClass:
                type: integer
            required:
            - emailAddress
            - familyName
            - dateOfIssuance
            - drivingLicenseID
            - drivingClass
            additionalProperties: false
        tags:
          description: Tokens that allow to lookup and filter the credential schema
            records.
          items:
            type: string
          type: array
        author:
          description: DID of the identity which authored the credential schema. A
            piece of Metadata.
          example: did:prism:4a5b5cf0a513e83b598bbea25cd6196746747f361a73ef77068268bc9bd732ff
          pattern: "^did:(?<method>[a-z0-9]+(:[a-z0-9]+)*)\\:(?<idstring>[^#?]*)$"
          type: string
      required:
      - author
      - name
      - schema
      - type
      - version
      type: object
    CredentialSchemaResponse:
      example:
        schema:
          $id: https://example.com/driving-license-1.0
          $schema: https://json-schema.org/draft/2020-12/schema
          description: Driving License
          type: object
          properties:
            emailAddress:
              type: string
              format: email
            givenName:
              type: string
            familyName:
              type: string
            dateOfIssuance:
              type: string
              format: date-time
            drivingLicenseID:
              type: string
            drivingClass:
              type: integer
          required:
          - emailAddress
          - familyName
          - dateOfIssuance
          - drivingLicenseID
          - drivingClass
          additionalProperties: false
        authored: 2022-03-10T12:00:00Z
        author: did:prism:4a5b5cf0a513e83b598bbea25cd6196746747f361a73ef77068268bc9bd732ff
        kind: CredentialSchema
        description: Simple credential schema for the driving licence verifiable credential.
        longId: did:prism:4a5b5cf0a513e83b598bbea25cd6196746747f361a73ef77068268bc9bd732ff/0527aea1-d131-3948-a34d-03af39aba8b4?version=1.0.0
        type: https://w3c-ccg.github.io/vc-json-schemas/schema/2.0/schema.json
        version: 1.0.0
        tags:
        - tags
        - tags
        name: DrivingLicense
        guid: 0527aea1-d131-3948-a34d-03af39aba8b4
        self: /prism-agent/schema-registry/schemas/0527aea1-d131-3948-a34d-03af39aba8b4
        id: 0527aea1-d131-3948-a34d-03af39aba8b5
        proof:
          type: Ed25519Signature2018
          created: 2022-03-10T12:00:00Z
          verificationMethod: did:prism:4a5b5cf0a513e83b598bbea25cd6196746747f361a73ef77068268bc9bd732ff#key-1
          proofPurpose: assertionMethod
          proofValue: FiPfjknHikKmZ...
          jws: eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il0sImt0eSI6Ik...
          domain: prims.atala.com
      properties:
        guid:
          description: "Globally unique id of the credential schema.It's composed\
            \ from the bytes of the string that contain the `author`, `name`, and\
            \ `version` values.The string format looks like the resource identifier:\
            \ `author`/`id`?version=`version`"
          example: 0527aea1-d131-3948-a34d-03af39aba8b4
          format: uuid
          type: string
        id:
          description: A locally unique identifier to address the schema. UUID is
            generated by the backend.
          example: 0527aea1-d131-3948-a34d-03af39aba8b5
          type: string
        longId:
          description: "Resource id of the credential schema. Contains the `author`'s\
            \ DID, `id` and `version` fields."
          example: did:prism:4a5b5cf0a513e83b598bbea25cd6196746747f361a73ef77068268bc9bd732ff/0527aea1-d131-3948-a34d-03af39aba8b4?version=1.0.0
          type: string
        name:
          description: A human-readable name for the credential schema. A piece of
            Metadata.
          example: DrivingLicense
          type: string
        version:
          description: Denotes the revision of a given Credential Schema. It should
            follow semantic version convention to describe the impact of the schema
            evolution.
          example: 1.0.0
          type: string
        tags:
          description: Tokens that allow to lookup and filter the credential schema
            records.
          items:
            type: string
          type: array
        description:
          description: A human-readable description of the credential schema
          example: Simple credential schema for the driving licence verifiable credential.
          type: string
        type:
          description: This field resolves to a JSON schema with details about the
            schema metadata that applies to the schema. A piece of Metadata.
          example: https://w3c-ccg.github.io/vc-json-schemas/schema/2.0/schema.json
          type: string
        schema:
          description: Valid JSON Schema where the Credential Schema data fields are
            defined. A piece of Metadata
          example:
            $id: https://example.com/driving-license-1.0
            $schema: https://json-schema.org/draft/2020-12/schema
            description: Driving License
            type: object
            properties:
              emailAddress:
                type: string
                format: email
              givenName:
                type: string
              familyName:
                type: string
              dateOfIssuance:
                type: string
                format: date-time
              drivingLicenseID:
                type: string
              drivingClass:
                type: integer
            required:
            - emailAddress
            - familyName
            - dateOfIssuance
            - drivingLicenseID
            - drivingClass
            additionalProperties: false
        author:
          description: DID of the identity which authored the credential schema. A
            piece of Metadata.
          example: did:prism:4a5b5cf0a513e83b598bbea25cd6196746747f361a73ef77068268bc9bd732ff
          type: string
        authored:
          description: "[RFC3339](https://www.rfc-editor.org/rfc/rfc3339) date on\
            \ which the credential schema was created. A piece of Metadata."
          example: 2022-03-10T12:00:00Z
          format: date-time
          type: string
        proof:
          $ref: '#/components/schemas/Proof'
        kind:
          description: A string that identifies the type of resource being returned
            in the response.
          example: CredentialSchema
          type: string
        self:
          description: The URL that uniquely identifies the resource being returned
            in the response.
          example: /prism-agent/schema-registry/schemas/0527aea1-d131-3948-a34d-03af39aba8b4
          type: string
      required:
      - author
      - authored
      - description
      - guid
      - id
      - kind
      - name
      - schema
      - self
      - type
      - version
      type: object
    CredentialSchemaResponsePage:
      example:
        pageOf: /prism-agent/schema-registry/schemas
        next: /prism-agent/schema-registry/schemas?skip=20&limit=10
        previous: /prism-agent/schema-registry/schemas?skip=0&limit=10
        contents:
        - schema:
            $id: https://example.com/driving-license-1.0
            $schema: https://json-schema.org/draft/2020-12/schema
            description: Driving License
            type: object
            properties:
              emailAddress:
                type: string
                format: email
              givenName:
                type: string
              familyName:
                type: string
              dateOfIssuance:
                type: string
                format: date-time
              drivingLicenseID:
                type: string
              drivingClass:
                type: integer
            required:
            - emailAddress
            - familyName
            - dateOfIssuance
            - drivingLicenseID
            - drivingClass
            additionalProperties: false
          authored: 2022-03-10T12:00:00Z
          author: did:prism:4a5b5cf0a513e83b598bbea25cd6196746747f361a73ef77068268bc9bd732ff
          kind: CredentialSchema
          description: Simple credential schema for the driving licence verifiable
            credential.
          longId: did:prism:4a5b5cf0a513e83b598bbea25cd6196746747f361a73ef77068268bc9bd732ff/0527aea1-d131-3948-a34d-03af39aba8b4?version=1.0.0
          type: https://w3c-ccg.github.io/vc-json-schemas/schema/2.0/schema.json
          version: 1.0.0
          tags:
          - tags
          - tags
          name: DrivingLicense
          guid: 0527aea1-d131-3948-a34d-03af39aba8b4
          self: /prism-agent/schema-registry/schemas/0527aea1-d131-3948-a34d-03af39aba8b4
          id: 0527aea1-d131-3948-a34d-03af39aba8b5
          proof:
            type: Ed25519Signature2018
            created: 2022-03-10T12:00:00Z
            verificationMethod: did:prism:4a5b5cf0a513e83b598bbea25cd6196746747f361a73ef77068268bc9bd732ff#key-1
            proofPurpose: assertionMethod
            proofValue: FiPfjknHikKmZ...
            jws: eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il0sImt0eSI6Ik...
            domain: prims.atala.com
        - schema:
            $id: https://example.com/driving-license-1.0
            $schema: https://json-schema.org/draft/2020-12/schema
            description: Driving License
            type: object
            properties:
              emailAddress:
                type: string
                format: email
              givenName:
                type: string
              familyName:
                type: string
              dateOfIssuance:
                type: string
                format: date-time
              drivingLicenseID:
                type: string
              drivingClass:
                type: integer
            required:
            - emailAddress
            - familyName
            - dateOfIssuance
            - drivingLicenseID
            - drivingClass
            additionalProperties: false
          authored: 2022-03-10T12:00:00Z
          author: did:prism:4a5b5cf0a513e83b598bbea25cd6196746747f361a73ef77068268bc9bd732ff
          kind: CredentialSchema
          description: Simple credential schema for the driving licence verifiable
            credential.
          longId: did:prism:4a5b5cf0a513e83b598bbea25cd6196746747f361a73ef77068268bc9bd732ff/0527aea1-d131-3948-a34d-03af39aba8b4?version=1.0.0
          type: https://w3c-ccg.github.io/vc-json-schemas/schema/2.0/schema.json
          version: 1.0.0
          tags:
          - tags
          - tags
          name: DrivingLicense
          guid: 0527aea1-d131-3948-a34d-03af39aba8b4
          self: /prism-agent/schema-registry/schemas/0527aea1-d131-3948-a34d-03af39aba8b4
          id: 0527aea1-d131-3948-a34d-03af39aba8b5
          proof:
            type: Ed25519Signature2018
            created: 2022-03-10T12:00:00Z
            verificationMethod: did:prism:4a5b5cf0a513e83b598bbea25cd6196746747f361a73ef77068268bc9bd732ff#key-1
            proofPurpose: assertionMethod
            proofValue: FiPfjknHikKmZ...
            jws: eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il0sImt0eSI6Ik...
            domain: prims.atala.com
        kind: CredentialSchemaPage
        self: /prism-agent/schema-registry/schemas?skip=10&limit=10
      properties:
        contents:
          description: A sequence of CredentialSchemaResponse objects representing
            the list of credential schemas that the API response contains
          items:
            $ref: '#/components/schemas/CredentialSchemaResponse'
          type: array
        kind:
          description: "A string field indicating the type of the API response. In\
            \ this case, it will always be set to `CredentialSchemaPage`"
          example: CredentialSchemaPage
          type: string
        self:
          description: A string field containing the URL of the current API endpoint
          example: /prism-agent/schema-registry/schemas?skip=10&limit=10
          type: string
        pageOf:
          description: A string field indicating the type of resource that the contents
            field contains
          example: /prism-agent/schema-registry/schemas
          type: string
        next:
          description: "An optional string field containing the URL of the next page\
            \ of results. If the API response does not contain any more pages, this\
            \ field should be set to None."
          example: /prism-agent/schema-registry/schemas?skip=20&limit=10
          type: string
        previous:
          description: "An optional string field containing the URL of the previous\
            \ page of results. If the API response is the first page of results, this\
            \ field should be set to None."
          example: /prism-agent/schema-registry/schemas?skip=0&limit=10
          type: string
      required:
      - kind
      - pageOf
      - self
      type: object
    DIDDocument:
      description: A W3C compliant Prism DID document representation.
      properties:
        '@context':
          description: The JSON-LD context for the DID resolution result.
          items:
            type: string
          type: array
        id:
          description: |-
            [DID subject](https://www.w3.org/TR/did-core/#did-subject).
            The value must match the DID that was given to the resolver.
          example: did:prism:4a5b5cf0a513e83b598bbea25cd6196746747f361a73ef77068268bc9bd732ff
          type: string
        controller:
          description: "[DID controller](https://www.w3.org/TR/did-core/#did-controller)"
          example: did:prism:4a5b5cf0a513e83b598bbea25cd6196746747f361a73ef77068268bc9bd732ff
          type: string
        verificationMethod:
          items:
            $ref: '#/components/schemas/VerificationMethod'
          type: array
        authentication:
          items:
            type: string
          type: array
        assertionMethod:
          items:
            type: string
          type: array
        keyAgreement:
          items:
            type: string
          type: array
        capabilityInvocation:
          items:
            type: string
          type: array
        capabilityDelegation:
          items:
            type: string
          type: array
        service:
          items:
            $ref: '#/components/schemas/Service'
          type: array
      required:
      - id
      type: object
    DIDDocumentMetadata:
      description: "[DID document metadata](https://www.w3.org/TR/did-core/#did-document-metadata)"
      properties:
        deactivated:
          description: "If a DID has been deactivated, DID document metadata MUST\
            \ include this property with the boolean value true. If a DID has not\
            \ been deactivated, this property is OPTIONAL, but if included, MUST have\
            \ the boolean value false."
          example: false
          type: boolean
        canonicalId:
          description: |2

            A DID in canonical form.
            If a DID is in long form and has been published, DID document metadata MUST contain a `canonicalId`` property with the short form DID as its value.
            If a DID in short form or has not been published, DID document metadata MUST NOT contain a `canonicalId` property.
          example: did:prism:4a5b5cf0a513e83b598bbea25cd6196746747f361a73ef77068268bc9bd732ff
          type: string
      type: object
    DIDOperationResponse:
      example:
        scheduledOperation:
          id: 98e6a4db10e58fcc011dd8def5ce99fd8b52af39e61e5fb436dc28259139818b
          didRef: did:prism:4a5b5cf0a513e83b598bbea25cd6196746747f361a73ef77068268bc9bd732ff
      properties:
        scheduledOperation:
          $ref: '#/components/schemas/DidOperationSubmission'
      required:
      - scheduledOperation
      type: object
    DIDResolutionMetadata:
      description: "[DID resolution metadata](https://www.w3.org/TR/did-core/#did-resolution-metadata)"
      properties:
        error:
          description: "Resolution error constant according to [DID spec registries](https://www.w3.org/TR/did-spec-registries/#error)"
          example: invalidDid
          type: string
        errorMessage:
          description: Resolution error message
          example: The initialState does not match the suffix
          type: string
        contentType:
          description: The media type of the returned DID document
          example: application/did+ld+json
          type: string
      type: object
    DIDResolutionResult:
      properties:
        '@context':
          description: The JSON-LD context for the DID resolution result.
          example: https://w3id.org/did-resolution/v1
          type: string
        didDocument:
          $ref: '#/components/schemas/DIDDocument'
        didDocumentMetadata:
          $ref: '#/components/schemas/DIDDocumentMetadata'
        didResolutionMetadata:
          $ref: '#/components/schemas/DIDResolutionMetadata'
      required:
      - '@context'
      - didDocumentMetadata
      - didResolutionMetadata
      type: object
    DidOperationSubmission:
      example:
        id: 98e6a4db10e58fcc011dd8def5ce99fd8b52af39e61e5fb436dc28259139818b
        didRef: did:prism:4a5b5cf0a513e83b598bbea25cd6196746747f361a73ef77068268bc9bd732ff
      properties:
        id:
          description: A scheduled operation ID
          example: 98e6a4db10e58fcc011dd8def5ce99fd8b52af39e61e5fb436dc28259139818b
          type: string
        didRef:
          description: A DID affected by the scheduled operation
          example: did:prism:4a5b5cf0a513e83b598bbea25cd6196746747f361a73ef77068268bc9bd732ff
          type: string
      required:
      - didRef
      - id
      type: object
    ErrorResponse:
      properties:
        status:
          description: The HTTP status code for this occurrence of the problem.
          example: 200
          format: int32
          type: integer
        type:
          description: A URI reference that identifies the problem type.
          example: https://example.org/doc/#model-MalformedEmail/
          type: string
        title:
          description: "A short, human-readable summary of the problem type. It does\
            \ not change from occurrence to occurrence of the problem."
          example: Malformed email
          type: string
        detail:
          description: A human-readable explanation specific to this occurrence of
            the problem.
          example: "The received '{}à!è@!.b}' email does not conform to the email\
            \ format"
          type: string
        instance:
          description: A URI reference that identifies the specific occurrence of
            the problem. It may or may not yield further information if dereferenced.
          example: "The received '{}à!è@!.b}' email does not conform to the email\
            \ format"
          type: string
      required:
      - instance
      - status
      - title
      - type
      type: object
    HealthInfo:
      example:
        version: 1.1.0
      properties:
        version:
          description: The semantic version number of the running service
          example: 1.1.0
          type: string
      required:
      - version
      type: object
    IssueCredentialRecord:
      example:
        validityPeriod: 3600.0
        recordId: 80d612dc-0ded-4ac9-90b4-1b8eabb04545
        createdAt: 2023-07-03T19:39:31.935548Z
        issuingDID: did:prism:issuerofverifiablecredentials
        role: Issuer
        jwtCredential: jwtCredential
        claims: "(firstname,Alice)"
        automaticIssuance: true
        subjectId: did:prism:subjectofverifiablecredentials
        updatedAt: 2000-01-23T04:56:07.000+00:00
        protocolState: OfferPending
      properties:
        subjectId:
          description: The identifier (e.g DID) of the subject to which the verifiable
            credential will be issued.
          example: did:prism:subjectofverifiablecredentials
          type: string
        validityPeriod:
          description: The validity period in seconds of the verifiable credential
            that will be issued.
          example: 3600.0
          format: double
          type: number
        claims:
          description: The claims that will be associated with the issued verifiable
            credential.
          example: "(firstname,Alice)"
        automaticIssuance:
          description: "Specifies whether or not the credential should be automatically\
            \ generated and issued when receiving the `CredentialRequest` from the\
            \ holder. If set to `false`, a manual approval by the issuer via API call\
            \ will be required for the VC to be issued."
          example: true
          type: boolean
        recordId:
          description: The unique identifier of the issue credential record.
          example: 80d612dc-0ded-4ac9-90b4-1b8eabb04545
          type: string
        createdAt:
          description: The date and time when the issue credential record was created.
          example: 2023-07-03T19:39:31.935548Z
          format: date-time
          type: string
        updatedAt:
          description: The date and time when the issue credential record was last
            updated.
          format: date-time
          type: string
        role:
          description: The role played by the Prism agent in the credential issuance
            flow.
          example: Issuer
          type: string
        protocolState:
          description: The current state of the issue credential protocol execution.
          example: OfferPending
          type: string
        jwtCredential:
          description: The base64-encoded JWT verifiable credential that has been
            sent by the issuer.
          type: string
        issuingDID:
          description: Issuer DID of the verifiable credential object.
          example: did:prism:issuerofverifiablecredentials
          type: string
      required:
      - claims
      - createdAt
      - protocolState
      - recordId
      - role
      type: object
    IssueCredentialRecordPage:
      example:
        pageOf: /prism-agent/schema-registry/schemas
        next: /prism-agent/schema-registry/schemas?skip=20&limit=10
        previous: /prism-agent/schema-registry/schemas?skip=0&limit=10
        contents:
        - validityPeriod: 3600.0
          recordId: 80d612dc-0ded-4ac9-90b4-1b8eabb04545
          createdAt: 2023-07-03T19:39:31.935548Z
          issuingDID: did:prism:issuerofverifiablecredentials
          role: Issuer
          jwtCredential: jwtCredential
          claims: "(firstname,Alice)"
          automaticIssuance: true
          subjectId: did:prism:subjectofverifiablecredentials
          updatedAt: 2000-01-23T04:56:07.000+00:00
          protocolState: OfferPending
        - validityPeriod: 3600.0
          recordId: 80d612dc-0ded-4ac9-90b4-1b8eabb04545
          createdAt: 2023-07-03T19:39:31.935548Z
          issuingDID: did:prism:issuerofverifiablecredentials
          role: Issuer
          jwtCredential: jwtCredential
          claims: "(firstname,Alice)"
          automaticIssuance: true
          subjectId: did:prism:subjectofverifiablecredentials
          updatedAt: 2000-01-23T04:56:07.000+00:00
          protocolState: OfferPending
        kind: /prism-agent/schema-registry/schemas?skip=10&limit=10
        self: /prism-agent/schema-registry/schemas?skip=10&limit=10
      properties:
        self:
          description: A string field containing the URL of the current API endpoint
          example: /prism-agent/schema-registry/schemas?skip=10&limit=10
          type: string
        kind:
          description: A string field containing the URL of the current API endpoint
          example: /prism-agent/schema-registry/schemas?skip=10&limit=10
          type: string
        pageOf:
          description: A string field indicating the type of resource that the contents
            field contains
          example: /prism-agent/schema-registry/schemas
          type: string
        next:
          description: "An optional string field containing the URL of the next page\
            \ of results. If the API response does not contain any more pages, this\
            \ field should be set to None."
          example: /prism-agent/schema-registry/schemas?skip=20&limit=10
          type: string
        previous:
          description: "An optional string field containing the URL of the previous\
            \ page of results. If the API response is the first page of results, this\
            \ field should be set to None."
          example: /prism-agent/schema-registry/schemas?skip=0&limit=10
          type: string
        contents:
          description: A sequence of IssueCredentialRecord objects representing the
            list of credential records that the API response contains
          items:
            $ref: '#/components/schemas/IssueCredentialRecord'
          type: array
      required:
      - kind
      - pageOf
      - self
      type: object
    ManagedDID:
      example:
        longFormDid: did:prism:4a5b5cf0a513e83b598bbea25cd6196746747f361a73ef77068268bc9bd732ff:Cr4BCrsBElsKBmF1dGgtMRAEQk8KCXNlY3AyNTZrMRIg0opTuxu-zt6aRbT1tPniG4eu4CYsQPM3rrLzvzNiNgwaIIFTnyT2N4U7qCQ78qtWC3-p0el6Hvv8qxG5uuEw-WgMElwKB21hc3RlcjAQAUJPCglzZWNwMjU2azESIKhBU0eCOO6Vinz_8vhtFSAhYYqrkEXC8PHGxkuIUev8GiAydFHLXb7c22A1Uj_PR21NZp6BCDQqNq2xd244txRgsQ
        did: did:prism:4a5b5cf0a513e83b598bbea25cd6196746747f361a73ef77068268bc9bd732ff
        status: CREATED
      properties:
        did:
          description: A managed DID
          example: did:prism:4a5b5cf0a513e83b598bbea25cd6196746747f361a73ef77068268bc9bd732ff
          type: string
        longFormDid:
          description: A long-form DID. Mandatory when status is not PUBLISHED and
            optional when status is PUBLISHED
          example: did:prism:4a5b5cf0a513e83b598bbea25cd6196746747f361a73ef77068268bc9bd732ff:Cr4BCrsBElsKBmF1dGgtMRAEQk8KCXNlY3AyNTZrMRIg0opTuxu-zt6aRbT1tPniG4eu4CYsQPM3rrLzvzNiNgwaIIFTnyT2N4U7qCQ78qtWC3-p0el6Hvv8qxG5uuEw-WgMElwKB21hc3RlcjAQAUJPCglzZWNwMjU2azESIKhBU0eCOO6Vinz_8vhtFSAhYYqrkEXC8PHGxkuIUev8GiAydFHLXb7c22A1Uj_PR21NZp6BCDQqNq2xd244txRgsQ
          type: string
        status:
          description: |-
            A status indicating a publication state of a DID in the wallet (e.g. PUBLICATION_PENDING, PUBLISHED).
            Does not represent DID a full lifecyle (e.g. deactivated, recovered, updated).
          example: CREATED
          type: string
      required:
      - did
      - status
      type: object
    ManagedDIDKeyTemplate:
      description: key-pair template to add to DID document.
      example:
        purpose: authentication
        id: key-1
      properties:
        id:
          description: Identifier of a verification material in the DID Document
          example: key-1
          type: string
        purpose:
          $ref: '#/components/schemas/Purpose'
      required:
      - id
      - purpose
      type: object
    ManagedDIDPage:
      example:
        pageOf: pageOf
        next: next
        previous: previous
        contents:
        - longFormDid: did:prism:4a5b5cf0a513e83b598bbea25cd6196746747f361a73ef77068268bc9bd732ff:Cr4BCrsBElsKBmF1dGgtMRAEQk8KCXNlY3AyNTZrMRIg0opTuxu-zt6aRbT1tPniG4eu4CYsQPM3rrLzvzNiNgwaIIFTnyT2N4U7qCQ78qtWC3-p0el6Hvv8qxG5uuEw-WgMElwKB21hc3RlcjAQAUJPCglzZWNwMjU2azESIKhBU0eCOO6Vinz_8vhtFSAhYYqrkEXC8PHGxkuIUev8GiAydFHLXb7c22A1Uj_PR21NZp6BCDQqNq2xd244txRgsQ
          did: did:prism:4a5b5cf0a513e83b598bbea25cd6196746747f361a73ef77068268bc9bd732ff
          status: CREATED
        - longFormDid: did:prism:4a5b5cf0a513e83b598bbea25cd6196746747f361a73ef77068268bc9bd732ff:Cr4BCrsBElsKBmF1dGgtMRAEQk8KCXNlY3AyNTZrMRIg0opTuxu-zt6aRbT1tPniG4eu4CYsQPM3rrLzvzNiNgwaIIFTnyT2N4U7qCQ78qtWC3-p0el6Hvv8qxG5uuEw-WgMElwKB21hc3RlcjAQAUJPCglzZWNwMjU2azESIKhBU0eCOO6Vinz_8vhtFSAhYYqrkEXC8PHGxkuIUev8GiAydFHLXb7c22A1Uj_PR21NZp6BCDQqNq2xd244txRgsQ
          did: did:prism:4a5b5cf0a513e83b598bbea25cd6196746747f361a73ef77068268bc9bd732ff
          status: CREATED
        kind: kind
        self: self
      properties:
        self:
          type: string
        kind:
          type: string
        pageOf:
          type: string
        next:
          type: string
        previous:
          type: string
        contents:
          items:
            $ref: '#/components/schemas/ManagedDID'
          type: array
      required:
      - kind
      - pageOf
      - self
      type: object
    Options:
      description: "The options to use when creating the proof presentation request\
        \ (e.g., domain, challenge)."
      example:
        domain: https://example-verifier.com
        challenge: 11c91493-01b3-4c4d-ac36-b336bab5bddf
      properties:
        challenge:
          description: The challenge should be a randomly generated string.
          example: 11c91493-01b3-4c4d-ac36-b336bab5bddf
          type: string
        domain:
          description: The domain value can be any string or URI.
          example: https://example-verifier.com
          type: string
      required:
      - challenge
      - domain
      type: object
    PresentationStatus:
      example:
        presentationId: 3c6d9fa5-d277-431e-a6cb-d3956e47e610
        data:
        - data
        - data
        proofs:
        - schemaId: https://schema.org/Person
          trustIssuers:
          - trustIssuers
          - trustIssuers
        - schemaId: https://schema.org/Person
          trustIssuers:
          - trustIssuers
          - trustIssuers
        connectionId: bc528dc8-69f1-4c5a-a508-5f8019047900
        status: RequestPending
      properties:
        presentationId:
          description: The unique identifier of the presentation record.
          example: 3c6d9fa5-d277-431e-a6cb-d3956e47e610
          type: string
        status:
          description: The current state of the proof presentation record.
          enum:
          - RequestPending
          - RequestSent
          - RequestReceived
          - RequestRejected
          - PresentationPending
          - PresentationGenerated
          - PresentationSent
          - PresentationReceived
          - PresentationVerified
          - PresentationAccepted
          - PresentationRejected
          - ProblemReportPending
          - ProblemReportSent
          - ProblemReportReceived
          example: RequestPending
          type: string
        proofs:
          description: "The type of proofs requested in the context of this proof\
            \ presentation request (e.g., VC schema, trusted issuers, etc.)"
          items:
            $ref: '#/components/schemas/ProofRequestAux'
          type: array
        data:
          description: The list of proofs presented by the prover to the verifier.
          items:
            type: string
          type: array
        connectionId:
          description: The unique identifier of an established connection between
            the verifier and the prover.
          example: bc528dc8-69f1-4c5a-a508-5f8019047900
          type: string
      required:
      - presentationId
      - status
      type: object
    PresentationStatusPage:
      example:
        pageOf: "1"
        next: ""
        previous: ""
        contents:
        - presentationId: 3c6d9fa5-d277-431e-a6cb-d3956e47e610
          data:
          - data
          - data
          proofs:
          - schemaId: https://schema.org/Person
            trustIssuers:
            - trustIssuers
            - trustIssuers
          - schemaId: https://schema.org/Person
            trustIssuers:
            - trustIssuers
            - trustIssuers
          connectionId: bc528dc8-69f1-4c5a-a508-5f8019047900
          status: RequestPending
        - presentationId: 3c6d9fa5-d277-431e-a6cb-d3956e47e610
          data:
          - data
          - data
          proofs:
          - schemaId: https://schema.org/Person
            trustIssuers:
            - trustIssuers
            - trustIssuers
          - schemaId: https://schema.org/Person
            trustIssuers:
            - trustIssuers
            - trustIssuers
          connectionId: bc528dc8-69f1-4c5a-a508-5f8019047900
          status: RequestPending
        kind: Collection
        self: /present-proof/presentations
      properties:
        contents:
          description: A sequence of Presentation objects.
          items:
            $ref: '#/components/schemas/PresentationStatus'
          type: array
        self:
          description: The reference to the presentation collection itself.
          example: /present-proof/presentations
          type: string
        kind:
          description: The type of object returned. In this case a `Collection`.
          example: Collection
          type: string
        pageOf:
          description: Page number within the context of paginated response.
          example: "1"
          type: string
        next:
          description: URL of the next page (if available)
          example: ""
          type: string
        previous:
          description: URL of the previous page (if available)
          example: ""
          type: string
      required:
      - kind
      - pageOf
      - self
      type: object
    Proof:
      description: A digital signature over the Credential Schema for the sake of
        asserting authorship. A piece of Metadata.
      example:
        type: Ed25519Signature2018
        created: 2022-03-10T12:00:00Z
        verificationMethod: did:prism:4a5b5cf0a513e83b598bbea25cd6196746747f361a73ef77068268bc9bd732ff#key-1
        proofPurpose: assertionMethod
        proofValue: FiPfjknHikKmZ...
        jws: eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il0sImt0eSI6Ik...
        domain: prims.atala.com
      properties:
        type:
          description: The type of cryptographic signature algorithm used to generate
            the proof.
          example: Ed25519Signature2018
          type: string
        created:
          description: "The date and time at which the proof was created, in UTC format.\
            \ This field is used to ensure that the proof was generated before or\
            \ at the same time as the credential schema itself."
          example: 2022-03-10T12:00:00Z
          format: date-time
          type: string
        verificationMethod:
          description: The verification method used to generate the proof. This is
            usually a DID and key ID combination that can be used to look up the public
            key needed to verify the proof.
          example: did:prism:4a5b5cf0a513e83b598bbea25cd6196746747f361a73ef77068268bc9bd732ff#key-1
          type: string
        proofPurpose:
          description: "The purpose of the proof (for example: `assertionMethod`).\
            \ This indicates that the proof is being used to assert that the issuer\
            \ really issued this credential schema instance."
          example: assertionMethod
          type: string
        proofValue:
          description: "The cryptographic signature value that was generated using\
            \ the private key associated with the verification method, and which can\
            \ be used to verify the proof."
          example: FiPfjknHikKmZ...
          type: string
        jws:
          description: The JSON Web Signature (JWS) that contains the proof information.
          example: eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il0sImt0eSI6Ik...
          type: string
        domain:
          description: It specifies the domain context within which the credential
            schema and proof are being used
          example: prims.atala.com
          type: string
      required:
      - created
      - jws
      - proofPurpose
      - proofValue
      - type
      - verificationMethod
      type: object
    ProofRequestAux:
      example:
        schemaId: https://schema.org/Person
        trustIssuers:
        - trustIssuers
        - trustIssuers
      properties:
        schemaId:
          description: The unique identifier of a schema the VC should comply with.
          example: https://schema.org/Person
          type: string
        trustIssuers:
          description: One or more issuers that are trusted by the verifier emitting
            the proof presentation request.
          items:
            type: string
          type: array
      required:
      - schemaId
      type: object
    PublicKeyJwk:
      properties:
        crv:
          type: string
        x:
          type: string
        "y":
          type: string
        kty:
          type: string
      required:
      - kty
      type: object
    Purpose:
      description: Purpose of the verification material in the DID Document
      enum:
      - assertionMethod
      - authentication
      - capabilityDelegation
      - capabilityInvocation
      - keyAgreement
      example: authentication
      type: string
    RemoveEntryById:
      example:
        id: id
      properties:
        id:
          type: string
      required:
      - id
      type: object
    RequestPresentationAction:
      example:
        action: request-accept
        proofId:
        - proofId
        - proofId
      properties:
        action:
          description: The action to perform on the proof presentation record.
          enum:
          - request-accept
          - request-reject
          - presentation-accept
          - presentation-reject
          example: request-accept
          type: string
        proofId:
          description: The unique identifier of the issue credential record - and
            hence VC - to use as the prover accepts the presentation request. Only
            applicable on the prover side when the action is `request-accept`.
          items:
            type: string
          type: array
      required:
      - action
      type: object
    RequestPresentationInput:
      example:
        proofs:
        - schemaId: https://schema.org/Person
          trustIssuers:
          - trustIssuers
          - trustIssuers
        - schemaId: https://schema.org/Person
          trustIssuers:
          - trustIssuers
          - trustIssuers
        options:
          domain: https://example-verifier.com
          challenge: 11c91493-01b3-4c4d-ac36-b336bab5bddf
        connectionId: bc528dc8-69f1-4c5a-a508-5f8019047900
      properties:
        connectionId:
          description: The unique identifier of an established connection between
            the verifier and the prover.
          example: bc528dc8-69f1-4c5a-a508-5f8019047900
          type: string
        options:
          $ref: '#/components/schemas/Options'
        proofs:
          description: "The type of proofs requested in the context of this proof\
            \ presentation request (e.g., VC schema, trusted issuers, etc.)"
          items:
            $ref: '#/components/schemas/ProofRequestAux'
          type: array
      required:
      - connectionId
      type: object
    RequestPresentationOutput:
      example:
        presentationId: 11c91493-01b3-4c4d-ac36-b336bab5bddf
      properties:
        presentationId:
          description: Ref to the id on the presentation (db ref)
          example: 11c91493-01b3-4c4d-ac36-b336bab5bddf
          type: string
      required:
      - presentationId
      type: object
    Service:
      description: A service expressed in the DID document. https://www.w3.org/TR/did-core/#services
      example:
        id: service-1
        serviceEndpoint:
        - serviceEndpoint
        - serviceEndpoint
        type: LinkedDomains
      properties:
        id:
          description: |-
            The id of the service.
            Requires a URI fragment when use in create / update DID.
            Returns the full ID (with DID prefix) when resolving DID
          example: service-1
          type: string
        type:
          description: "Service type. Can contain multiple possible values as described\
            \ in the [Create DID operation](https://github.com/input-output-hk/prism-did-method-spec/blob/main/w3c-spec/PRISM-method.md#create-did)\
            \ under the construction section."
          example: LinkedDomains
          type: string
        serviceEndpoint:
          description: "The service endpoint. Can contain multiple possible values\
            \ as described in the [Create DID operation]"
          items:
            type: string
          type: array
      required:
      - id
      - serviceEndpoint
      - type
      type: object
    UpdateManagedDIDRequest:
      example:
        actions:
        - actionType: null
          removeKey:
            id: id
          removeService:
            id: id
          addService:
            id: service-1
            serviceEndpoint:
            - serviceEndpoint
            - serviceEndpoint
            type: LinkedDomains
          updateService:
            id: service-1
            serviceEndpoint:
            - serviceEndpoint
            - serviceEndpoint
            type: LinkedDomains
          addKey:
            purpose: authentication
            id: key-1
        - actionType: null
          removeKey:
            id: id
          removeService:
            id: id
          addService:
            id: service-1
            serviceEndpoint:
            - serviceEndpoint
            - serviceEndpoint
            type: LinkedDomains
          updateService:
            id: service-1
            serviceEndpoint:
            - serviceEndpoint
            - serviceEndpoint
            type: LinkedDomains
          addKey:
            purpose: authentication
            id: key-1
      properties:
        actions:
          items:
            $ref: '#/components/schemas/UpdateManagedDIDRequestAction'
          type: array
      type: object
    UpdateManagedDIDRequestAction:
      description: |-
        A list of actions to perform on DID document.
        The field `addKey`, `removeKey`, `addService`, `removeService`, `updateService` must corresponds to
        the `actionType` specified. For example, `addKey` must be present when `actionType` is `ADD_KEY`.
      example:
        actionType: null
        removeKey:
          id: id
        removeService:
          id: id
        addService:
          id: service-1
          serviceEndpoint:
          - serviceEndpoint
          - serviceEndpoint
          type: LinkedDomains
        updateService:
          id: service-1
          serviceEndpoint:
          - serviceEndpoint
          - serviceEndpoint
          type: LinkedDomains
        addKey:
          purpose: authentication
          id: key-1
      properties:
        actionType:
          $ref: '#/components/schemas/ActionType'
        addKey:
          $ref: '#/components/schemas/ManagedDIDKeyTemplate'
        removeKey:
          $ref: '#/components/schemas/RemoveEntryById'
        addService:
          $ref: '#/components/schemas/Service'
        removeService:
          $ref: '#/components/schemas/RemoveEntryById'
        updateService:
          $ref: '#/components/schemas/UpdateManagedDIDServiceAction'
      required:
      - actionType
      type: object
    UpdateManagedDIDServiceAction:
      description: A patch to existing Service. 'type' and 'serviceEndpoint' cannot
        both be empty.
      example:
        id: service-1
        serviceEndpoint:
        - serviceEndpoint
        - serviceEndpoint
        type: LinkedDomains
      properties:
        id:
          description: The id of the service to update
          example: service-1
          type: string
        type:
          description: The type of the service
          example: LinkedDomains
          type: string
        serviceEndpoint:
          items:
            type: string
          type: array
      required:
      - id
      type: object
    VerificationMethod:
      description: A cryptographic public key expressed in the DID document. https://www.w3.org/TR/did-core/#verification-methods
      properties:
        id:
          description: The identifier for the verification method.
          example: did:prism:4a5b5cf0a513e83b598bbea25cd6196746747f361a73ef77068268bc9bd732ff#key-1
          type: string
        type:
          description: The type of the verification method.
          example: JsonWebKey2020
          type: string
        controller:
          description: The DID that controls the verification method.
          example: did:prism:4a5b5cf0a513e83b598bbea25cd6196746747f361a73ef77068268bc9bd732ff
          type: string
        publicKeyJwk:
          $ref: '#/components/schemas/PublicKeyJwk'
      required:
      - controller
      - id
      - publicKeyJwk
      - type
      type: object
    VerificationPolicy:
      example:
        createdAt: 2000-01-23T04:56:07.000+00:00
        kind: kind
        name: name
        self: self
        description: description
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        nonce: 0
        constraints:
        - trustedIssuers:
          - trustedIssuers
          - trustedIssuers
          schemaId: schemaId
        - trustedIssuers:
          - trustedIssuers
          - trustedIssuers
          schemaId: schemaId
        updatedAt: 2000-01-23T04:56:07.000+00:00
      properties:
        self:
          type: string
        kind:
          type: string
        id:
          format: uuid
          type: string
        nonce:
          format: int32
          type: integer
        name:
          type: string
        description:
          type: string
        createdAt:
          format: date-time
          type: string
        updatedAt:
          format: date-time
          type: string
        constraints:
          items:
            $ref: '#/components/schemas/VerificationPolicyConstraint'
          type: array
      required:
      - createdAt
      - description
      - id
      - kind
      - name
      - nonce
      - self
      - updatedAt
      type: object
    VerificationPolicyConstraint:
      example:
        trustedIssuers:
        - trustedIssuers
        - trustedIssuers
        schemaId: schemaId
      properties:
        schemaId:
          type: string
        trustedIssuers:
          items:
            type: string
          type: array
      required:
      - schemaId
      type: object
    VerificationPolicyInput:
      example:
        name: name
        description: description
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        constraints:
        - trustedIssuers:
          - trustedIssuers
          - trustedIssuers
          schemaId: schemaId
        - trustedIssuers:
          - trustedIssuers
          - trustedIssuers
          schemaId: schemaId
      properties:
        id:
          format: uuid
          type: string
        name:
          type: string
        description:
          type: string
        constraints:
          items:
            $ref: '#/components/schemas/VerificationPolicyConstraint'
          type: array
      required:
      - description
      - name
      type: object
    VerificationPolicyPage:
      example:
        pageOf: pageOf
        next: next
        previous: previous
        contents:
        - createdAt: 2000-01-23T04:56:07.000+00:00
          kind: kind
          name: name
          self: self
          description: description
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          nonce: 0
          constraints:
          - trustedIssuers:
            - trustedIssuers
            - trustedIssuers
            schemaId: schemaId
          - trustedIssuers:
            - trustedIssuers
            - trustedIssuers
            schemaId: schemaId
          updatedAt: 2000-01-23T04:56:07.000+00:00
        - createdAt: 2000-01-23T04:56:07.000+00:00
          kind: kind
          name: name
          self: self
          description: description
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          nonce: 0
          constraints:
          - trustedIssuers:
            - trustedIssuers
            - trustedIssuers
            schemaId: schemaId
          - trustedIssuers:
            - trustedIssuers
            - trustedIssuers
            schemaId: schemaId
          updatedAt: 2000-01-23T04:56:07.000+00:00
        kind: kind
        self: self
      properties:
        self:
          type: string
        kind:
          type: string
        pageOf:
          type: string
        next:
          type: string
        previous:
          type: string
        contents:
          items:
            $ref: '#/components/schemas/VerificationPolicy'
          type: array
      required:
      - kind
      - pageOf
      - self
      type: object
