/* tslint:disable */
/* eslint-disable */
/**
 * Prism Agent
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface CredentialSchemaInput
 */
export interface CredentialSchemaInput {
    /**
     * A human-readable name for the credential schema. A piece of Metadata.
     * @type {string}
     * @memberof CredentialSchemaInput
     */
    name: string;
    /**
     * Denotes the revision of a given Credential Schema. It should follow semantic version convention to describe the impact of the schema evolution.
     * @type {string}
     * @memberof CredentialSchemaInput
     */
    version: string;
    /**
     * A human-readable description of the credential schema
     * @type {string}
     * @memberof CredentialSchemaInput
     */
    description?: string;
    /**
     * This field resolves to a JSON schema with details about the schema metadata that applies to the schema. A piece of Metadata.
     * @type {string}
     * @memberof CredentialSchemaInput
     */
    type: string;
    /**
     * Valid JSON Schema where the Credential Schema data fields are defined. A piece of Metadata
     * @type {any}
     * @memberof CredentialSchemaInput
     */
    schema: any | null;
    /**
     * Tokens that allow to lookup and filter the credential schema records.
     * @type {Array<string>}
     * @memberof CredentialSchemaInput
     */
    tags?: Array<string>;
    /**
     * DID of the identity which authored the credential schema. A piece of Metadata.
     * @type {string}
     * @memberof CredentialSchemaInput
     */
    author: string;
}

/**
 * Check if a given object implements the CredentialSchemaInput interface.
 */
export function instanceOfCredentialSchemaInput(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "name" in value;
    isInstance = isInstance && "version" in value;
    isInstance = isInstance && "type" in value;
    isInstance = isInstance && "schema" in value;
    isInstance = isInstance && "author" in value;

    return isInstance;
}

export function CredentialSchemaInputFromJSON(json: any): CredentialSchemaInput {
    return CredentialSchemaInputFromJSONTyped(json, false);
}

export function CredentialSchemaInputFromJSONTyped(json: any, ignoreDiscriminator: boolean): CredentialSchemaInput {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'name': json['name'],
        'version': json['version'],
        'description': !exists(json, 'description') ? undefined : json['description'],
        'type': json['type'],
        'schema': json['schema'],
        'tags': !exists(json, 'tags') ? undefined : json['tags'],
        'author': json['author'],
    };
}

export function CredentialSchemaInputToJSON(value?: CredentialSchemaInput | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'name': value.name,
        'version': value.version,
        'description': value.description,
        'type': value.type,
        'schema': value.schema,
        'tags': value.tags,
        'author': value.author,
    };
}

