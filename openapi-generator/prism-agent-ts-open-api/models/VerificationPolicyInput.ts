/* tslint:disable */
/* eslint-disable */
/**
 * Prism Agent
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { VerificationPolicyConstraint } from './VerificationPolicyConstraint';
import {
    VerificationPolicyConstraintFromJSON,
    VerificationPolicyConstraintFromJSONTyped,
    VerificationPolicyConstraintToJSON,
} from './VerificationPolicyConstraint';

/**
 * 
 * @export
 * @interface VerificationPolicyInput
 */
export interface VerificationPolicyInput {
    /**
     * 
     * @type {string}
     * @memberof VerificationPolicyInput
     */
    id?: string;
    /**
     * 
     * @type {string}
     * @memberof VerificationPolicyInput
     */
    name: string;
    /**
     * 
     * @type {string}
     * @memberof VerificationPolicyInput
     */
    description: string;
    /**
     * 
     * @type {Array<VerificationPolicyConstraint>}
     * @memberof VerificationPolicyInput
     */
    constraints?: Array<VerificationPolicyConstraint>;
}

/**
 * Check if a given object implements the VerificationPolicyInput interface.
 */
export function instanceOfVerificationPolicyInput(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "name" in value;
    isInstance = isInstance && "description" in value;

    return isInstance;
}

export function VerificationPolicyInputFromJSON(json: any): VerificationPolicyInput {
    return VerificationPolicyInputFromJSONTyped(json, false);
}

export function VerificationPolicyInputFromJSONTyped(json: any, ignoreDiscriminator: boolean): VerificationPolicyInput {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'name': json['name'],
        'description': json['description'],
        'constraints': !exists(json, 'constraints') ? undefined : ((json['constraints'] as Array<any>).map(VerificationPolicyConstraintFromJSON)),
    };
}

export function VerificationPolicyInputToJSON(value?: VerificationPolicyInput | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'name': value.name,
        'description': value.description,
        'constraints': value.constraints === undefined ? undefined : ((value.constraints as Array<any>).map(VerificationPolicyConstraintToJSON)),
    };
}

